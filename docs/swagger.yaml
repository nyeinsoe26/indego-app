definitions:
  dtos.ErrorResponse:
    properties:
      error:
        example: Internal Server Error
        type: string
    type: object
  dtos.FetchIndegoWeatherResponse:
    properties:
      message:
        example: Data stored successfully
        type: string
    type: object
  dtos.SpecificStationSnapshotResponse:
    properties:
      at:
        example: "2019-09-01T10:00:00Z"
        type: string
      station:
        $ref: '#/definitions/models.StationFeature'
      weather:
        $ref: '#/definitions/models.WeatherData'
    type: object
  dtos.StationSnapshotResponse:
    properties:
      at:
        example: "2019-09-01T10:00:00Z"
        type: string
      stations:
        $ref: '#/definitions/models.IndegoData'
      weather:
        $ref: '#/definitions/models.WeatherData'
    type: object
  models.Bike:
    properties:
      battery:
        description: Battery can be null
        type: integer
      dockNumber:
        type: integer
      isAvailable:
        type: boolean
      isElectric:
        type: boolean
    type: object
  models.Geometry:
    properties:
      coordinates:
        items:
          type: number
        type: array
      type:
        type: string
    type: object
  models.IndegoData:
    properties:
      features:
        items:
          $ref: '#/definitions/models.StationFeature'
        type: array
      last_updated:
        type: string
    type: object
  models.StationFeature:
    properties:
      geometry:
        $ref: '#/definitions/models.Geometry'
      properties:
        $ref: '#/definitions/models.StationProperties'
      type:
        type: string
    type: object
  models.StationProperties:
    properties:
      addressCity:
        type: string
      addressState:
        type: string
      addressStreet:
        type: string
      addressZipCode:
        type: string
      bikes:
        items:
          $ref: '#/definitions/models.Bike'
        type: array
      bikesAvailable:
        type: integer
      classicBikesAvailable:
        type: integer
      closeTime:
        type: string
      coordinates:
        items:
          type: number
        type: array
      docksAvailable:
        type: integer
      electricBikesAvailable:
        type: integer
      eventEnd:
        type: string
      eventStart:
        type: string
      id:
        type: integer
      isEventBased:
        type: boolean
      isVirtual:
        type: boolean
      kioskConnectionStatus:
        type: string
      kioskId:
        type: integer
      kioskPublicStatus:
        type: string
      kioskStatus:
        type: string
      kioskType:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      notes:
        type: string
      openTime:
        type: string
      publicText:
        type: string
      rewardBikesAvailable:
        type: integer
      rewardDocksAvailable:
        type: integer
      smartBikesAvailable:
        type: integer
      timeZone:
        type: string
      totalDocks:
        type: integer
      trikesAvailable:
        type: integer
    type: object
  models.WeatherData:
    properties:
      clouds:
        properties:
          all:
            type: integer
        type: object
      coord:
        properties:
          lat:
            type: number
          lon:
            type: number
        type: object
      main:
        properties:
          feels_like:
            type: number
          humidity:
            type: integer
          pressure:
            type: integer
          temp:
            type: number
          temp_max:
            type: number
          temp_min:
            type: number
        type: object
      name:
        type: string
      weather:
        items:
          properties:
            description:
              type: string
            icon:
              type: string
            main:
              type: string
          type: object
        type: array
      wind:
        properties:
          deg:
            type: integer
          speed:
            type: number
        type: object
    type: object
info:
  contact: {}
paths:
  /api/v1/indego-data-fetch-and-store-it-db:
    post:
      consumes:
      - application/json
      description: Fetch the latest data from Indego and Weather services, store them
        in the database, and link them.
      produces:
      - application/json
      responses:
        "201":
          description: Data stored successfully
          schema:
            $ref: '#/definitions/dtos.FetchIndegoWeatherResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Store the latest Indego and Weather data
      tags:
      - Indego
  /api/v1/stations:
    get:
      consumes:
      - application/json
      description: Get a snapshot of all stations and weather data at a specified
        time using the 'at' query parameter.
      parameters:
      - description: Timestamp in RFC3339 format
        in: query
        name: at
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Snapshot data
          schema:
            $ref: '#/definitions/dtos.StationSnapshotResponse'
        "400":
          description: Invalid time format
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Retrieve a snapshot of all stations at a specific time
      tags:
      - Indego
  /api/v1/stations/{kioskId}:
    get:
      consumes:
      - application/json
      description: Get a snapshot of a specific station's data at a given time.
      parameters:
      - description: Kiosk ID
        in: path
        name: kioskId
        required: true
        type: string
      - description: Timestamp in RFC3339 format
        in: query
        name: at
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Station data
          schema:
            $ref: '#/definitions/dtos.SpecificStationSnapshotResponse'
        "400":
          description: Invalid kioskId or time format
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "404":
          description: Station not found
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "500":
          description: Failed to fetch snapshot
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Retrieve a snapshot of a specific station at a specific time
      tags:
      - Indego
swagger: "2.0"
